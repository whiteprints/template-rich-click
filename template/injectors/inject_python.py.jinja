# /// script
# requires-python = ">=3.9"
# dependencies = []
# ///
"""Module to update `pyproject.toml` with new entry points."""

from pathlib import Path


def main() -> None:
    """Inject beartype and dotenv to toplelvel module."""
    init_path = (
        Path("src")
        / "{{ package_name }}"
        / "__init__.py"
    )
    init = init_path.read_text()
    source = "from typing import Final\n"
    if source not in init:
        raise ValueError("Replacement failed.")

    init = init.replace(
        source,
        (
            "from typing import Final\n"
            "\n"
            "from {{ package_name }}.environment import ENVIRONMENT_FILE, load_dotenv"
        )
    )

    source = "\"\"\"Public module attributes.\"\"\"\n"
    if source not in init:
        raise ValueError("Replacement failed.")

    init = init.replace(
        source,
        (
	          "\"\"\"Public module attributes.\"\"\""
{%- if target_python_version[3:] | int > 11 %}
"""


if __debug__:
    beartype = importlib.import_module("beartype")
    beartype_claw = importlib.import_module("beartype.claw")
    beartype_claw.beartype_this_package(
        conf=beartype.BeartypeConf(is_color=False),
    )

load_dotenv(ENVIRONMENT_FILE)
"""
{%- else %}
"""


load_dotenv(ENVIRONMENT_FILE)
"""
{%- endif %}
        ),
    )

{%- if target_python_version[3:] | int > 11 %}
    init = init.replace(
        "from typing import Final",
        (
            "import importlib\n"
            "from typing import Final"
        )
    )
{%- endif %}

    init_path.write_text(init)

if __name__ == "__main__":
    main()
